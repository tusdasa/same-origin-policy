#user  nobody;
worker_processes auto;

error_log logs/error.log;
worker_rlimit_nofile 65535;
#pid nginx.pid;


events {
    multi_accept on;
    worker_connections 65535;
}


http {
    include mime.types;
    default_type application/octet-stream;

    #lua_package_path 'app/?.lua;;';

    charset utf-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;
    log_not_found off;
    types_hash_max_size 2048;
    types_hash_bucket_size 64;
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    lua_code_cache on;
    client_max_body_size 50k;
    client_body_buffer_size 50k;
    lua_shared_dict cache 128m;

    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    #upstream backend {
    #    server 10.0.12.16:8080;
    #    server 10.0.12.7:8080;
    #}

    server {
        listen 443 ssl;
        #listen 80;
        server_name _;

        ssl_certificate ssl/localhost.pem;
        ssl_certificate_key ssl/localhost.key;

        access_by_lua_file "app/access.lua";
        #header_filter_by_lua_file "app/header.lua";
        root site;
        #add_header X-XSS-Protection          "1; mode=block" always;
        #add_header X-Content-Type-Options    "nosniff" always;

        location / {
            #access_by_lua_file "app/access.lua";
            #header_filter_by_lua_file "app/header.lua";
            index index.html index.htm;
        }

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
            expires 7d;
            access_log off;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
        location /api/ {
            add_header Access-Control-Allow-Origin '*' always;
            add_header Access-Control-Allow-Headers '*';
            add_header Access-Control-Allow-Methods '*';
            add_header Access-Control-Allow-Credentials 'true';
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 10s;
            proxy_read_timeout 10s;
            proxy_send_timeout 10s;
            proxy_pass http://backend;
        }

    }

    #server{
    #listen 172.16.0.6:8888;
    #    location / {
    #	   root   /extdata/webdav;
    #	   autoindex on;
    #	   autoindex_format html;
    #	   autoindex_exact_size off;
    #	   autoindex_localtime on;
    #    }
    #}
    #server {
    #    listen 172.16.0.6:80;
    #    access_log off;
    #    location / {
    #        root /usr/local/openresty/nginx/www;
    #        index index.html index.htm;
    #        default_type application/json;
    #        #content_by_lua_block {
    #        #	ngx.say("{\"code\":200,\"msg\":\"ok\"}")
    #        #}
    #   }
    #}

}
